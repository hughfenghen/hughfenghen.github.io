(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{404:function(e,t,r){"use strict";r.r(t);var n=r(42),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"在termux中运行web项目"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#在termux中运行web项目"}},[e._v("#")]),e._v(" 在Termux中运行web项目")]),e._v(" "),r("h2",{attrs:{id:"termux是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#termux是什么"}},[e._v("#")]),e._v(" Termux是什么")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://termux.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("官网"),r("OutboundLink")],1)]),e._v(" "),r("blockquote",[r("p",[e._v("Termux is an Android terminal emulator and Linux environment app that works directly with no rooting or setup required. A minimal base system is installed automatically - additional packages are available using the APT package manager.")])]),e._v(" "),r("p",[e._v("就是在Android上运行一个Linux终端。")]),e._v(" "),r("h2",{attrs:{id:"运行web项目"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#运行web项目"}},[e._v("#")]),e._v(" 运行Web项目")]),e._v(" "),r("p",[e._v("是的，我在知道Termux后第一反应是可以用来写代码。")]),e._v(" "),r("p",[e._v("以"),r("a",{attrs:{href:"https://github.com/hughfenghen/Erra",target:"_blank",rel:"noopener noreferrer"}},[e._v("Erra项目"),r("OutboundLink")],1),e._v("为例。")]),e._v(" "),r("ol",[r("li",[e._v("打开Termux")]),e._v(" "),r("li",[e._v("安装node。"),r("code",[e._v("pkg install nodejs")])]),e._v(" "),r("li",[e._v("clone代码。"),r("code",[e._v("git clone https://github.com/hughfenghen/Erra.git")])]),e._v(" "),r("li",[r("code",[e._v("cd Erra")]),e._v(", 执行 "),r("code",[e._v("npm i")])])]),e._v(" "),r("p",[e._v("到此为止，应该一切都很顺利。。。")]),e._v(" "),r("h2",{attrs:{id:"node-gyp编辑错误"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#node-gyp编辑错误"}},[e._v("#")]),e._v(" node-gyp编辑错误")]),e._v(" "),r("p",[e._v("Termux毕竟不是真实的Linux环境，需要node-gyp编译的包容易出问题。")]),e._v(" "),r("p",[e._v("当时执行"),r("code",[e._v("npm i")]),e._v("后，以下是我遇到的问题：")]),e._v(" "),r("ul",[r("li",[e._v("第一个错误 "),r("code",[e._v("python is not command")]),r("br"),e._v("\nok，这个容易理解。执行 "),r("code",[e._v("pkg install python")])]),e._v(" "),r("li",[e._v("仍然报错 "),r("code",[e._v('/data/data/com.termux/files/usr/bin/python -c import sys; print "%s.%s.%s" %')]),r("br"),e._v("\n???, 想到了Python 2.7那个梗"),r("br"),e._v("\n执行 "),r("code",[e._v("pkg install python2")])]),e._v(" "),r("li",[e._v("继续install，继续报错 "),r("code",[e._v("gyp ERR! stack Error: not found: make")]),r("br"),e._v("\ngoogle 得知 "),r("code",[e._v("pkg install build-essential")])]),e._v(" "),r("li",[e._v("继续install，继续报错 "),r("code",[e._v("make failed；recompile with -fPIC")]),r("br"),e._v("\n这个坑了比较久，github搜到几个回答要去改node-gyp下的文件。觉得这个方式不太好，最终根据"),r("a",{attrs:{href:"https://github.com/termux/termux-packages/issues/3266#issuecomment-457255951",target:"_blank",rel:"noopener noreferrer"}},[e._v("这个回答"),r("OutboundLink")],1),e._v("尝试 "),r("code",[e._v('CPPFLAGS="$CPPFLAGS -fPIC" npm i')]),e._v(" 安装成功")])])])}),[],!1,null,null,null);t.default=a.exports}}]);