(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{351:function(t,s,v){t.exports=v.p+"assets/img/http-1.36803d78.jpg"},352:function(t,s,v){t.exports=v.p+"assets/img/https-3.a0192c71.jpg"},353:function(t,s,v){t.exports=v.p+"assets/img/https-4.abe50b65.png"},354:function(t,s,v){t.exports=v.p+"assets/img/https-2.19b3d98b.jpg"},388:function(t,s,v){"use strict";v.r(s);var _=v(42),a=Object(_.a)({},(function(){var t=this,s=t.$createElement,_=t._self._c||s;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"https加密原理简介"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#https加密原理简介"}},[t._v("#")]),t._v(" HTTPS加密原理简介")]),t._v(" "),_("p",[t._v("https相关的资料已经非常多，本文尽量以最简洁的图文介绍大致原理，不涉及细节。")]),t._v(" "),_("p",[_("em",[t._v("本文开始前，读者需要先了解"),_("strong",[t._v("对称加密")]),t._v("、"),_("strong",[t._v("非对称加密")]),t._v("、"),_("strong",[t._v("hash算法")]),t._v("相关知识。")])]),t._v(" "),_("h2",{attrs:{id:"https如何保证传输数据安全？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#https如何保证传输数据安全？"}},[t._v("#")]),t._v(" HTTPS如何保证传输数据安全？")]),t._v(" "),_("ol",[_("li",[t._v("服务器将"),_("strong",[t._v("公钥")]),t._v("（非对称加密）发送给客户端")]),t._v(" "),_("li",[t._v("客户端生成随机"),_("strong",[t._v("密钥")]),t._v("（对称加密），通过公钥加密后发送给服务端，这样双方都拥有了对称加密的密钥")]),t._v(" "),_("li",[t._v("后续传输的数据是通过密钥加密的"),_("strong",[t._v("密文")]),t._v("（所以传输的数据是安全的）")])]),t._v(" "),_("p",[_("img",{attrs:{src:v(351),alt:"https加密过程"}})]),t._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),_("p",[t._v("http协议传输的数据相当于裸奔，数据从服务器到浏览器，经过的任意一个网络节点（代理、wifi、运营商等等）都可以随意篡改用户数据。")])]),t._v(" "),_("h2",{attrs:{id:"如何确保服务器公钥没有被篡改？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何确保服务器公钥没有被篡改？"}},[t._v("#")]),t._v(" 如何确保服务器公钥没有被篡改？")]),t._v(" "),_("p",[t._v("从上一节可以看到，第一步服务器下发公钥给客户端是明文的，所以确保公钥未被篡改至关重要。")]),t._v(" "),_("p",[t._v("上一节第一步，服务器下发的证书中主要包含三个元素：服务器公钥、证书颁发机构信息、颁发机构签名。")]),t._v(" "),_("p",[_("img",{attrs:{src:v(352),alt:"签名来历"}})]),t._v(" "),_("p",[t._v("浏览器可以根据颁发机构信息找到其对应的公钥，然后三步即可验证服务器公钥是否安全：")]),t._v(" "),_("ol",[_("li",[t._v("通过颁发机构公钥解密签名，得到服务器公钥的hash值")]),t._v(" "),_("li",[t._v("hash服务器公钥，得到其公钥的hash值")]),t._v(" "),_("li",[t._v("对比前两步得到的公钥hash值是否相同，如果相同则说明公钥未被篡改")])]),t._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),_("p",[t._v("这里我们可以总结得到：证书是否可信（或者说公钥是否安全），需要通过证书颁发者（的公钥）来验证。")])]),t._v(" "),_("h2",{attrs:{id:"浏览器如何确保颁发机构是否可信？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器如何确保颁发机构是否可信？"}},[t._v("#")]),t._v(" 浏览器如何确保颁发机构是否可信？")]),t._v(" "),_("p",[t._v("从第二节可以看到，验证服务器公钥安全性的关键在于颁发机构是否可信。")]),t._v(" "),_("p",[t._v("证书颁发机构（组织）是一个树状结构，如图："),_("br"),t._v(" "),_("img",{attrs:{src:v(353),alt:"证书结构"}})]),t._v(" "),_("p",[t._v("所以说这个问题类似第二个问题，验证颁发机构是否可信（公钥是否安全），需要通过上层的颁发机构来验证。"),_("br"),t._v("\n采用第二步的方式进行递归验证，即可确保所有证书都是安全的。"),_("br"),t._v(" "),_("img",{attrs:{src:v(354),alt:"证书验证过程"}})]),t._v(" "),_("p",[t._v("递归的终点即根证书，如何验证根证书是否可信呢？"),_("br"),t._v("\n答案是"),_("strong",[t._v("浏览器内置")]),t._v("的，无条件信任。(浏览器还会信任操作系统的证书)")]),t._v(" "),_("h2",{attrs:{id:"如何篡改https协议传输的数据？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何篡改https协议传输的数据？"}},[t._v("#")]),t._v(" 如何篡改HTTPS协议传输的数据？")]),t._v(" "),_("p",[t._v("https经过这么严密的验证过程，还能篡改数据么？  可以的。")]),t._v(" "),_("p",[t._v("从第三步可以看到，只要浏览器信任了假根证书，前面的验证步骤都不安全了。"),_("br"),t._v("\n代理工具的根证书被信任后就可以生成假证书返回给浏览器，而不会被浏览器发现。"),_("br"),t._v("\n所以，所有代理工具都必须用户信任其根证书，才能够查看篡改https请求的内容。")])])}),[],!1,null,null,null);s.default=a.exports}}]);