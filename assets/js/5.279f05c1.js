(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{363:function(t,s,a){t.exports=a.p+"assets/img/canvas-sprite.542a3548.png"},364:function(t,s,a){t.exports=a.p+"assets/img/scale-rect.3c089d1c.png"},365:function(t,s,a){t.exports=a.p+"assets/img/coord-rotation.f49dd5e5.png"},398:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"mini-canvas-lib-核心交互实现原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mini-canvas-lib-核心交互实现原理"}},[t._v("#")]),t._v(" Mini Canvas Lib 核心交互实现原理")]),t._v(" "),n("p",[t._v("背景：\n需要使用 Canvas 实现添加图片、文字、摄像头画面，并且支持拖拽、缩放、旋转等功能。\n但成熟 Canvas 库（比如 Sprite.js Fabric.js ）一般都比较庞大（300kb+），所以自己实现精简版本，减少体积。")]),t._v(" "),n("h2",{attrs:{id:"零"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#零"}},[t._v("#")]),t._v(" 零")]),t._v(" "),n("p",[n("strong",[t._v("基本功能：")])]),t._v(" "),n("ul",[n("li",[t._v("拖拽移动元素")]),t._v(" "),n("li",[t._v("缩放元素（变形、等比例缩放）")]),t._v(" "),n("li",[t._v("旋转元素")]),t._v(" "),n("li",[t._v("元素内容可以是：图片、文字、摄像头")])]),t._v(" "),n("p",[t._v("画布中的元素（也可称为Sprite），每个元素的的位置信息由 IRect 描述，交互可体验"),n("a",{attrs:{href:"http://fabricjs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Fabric.js"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IRect")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  y"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  w"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  h"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Sprite")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 位置，尺寸数据")]),t._v("\n  rect"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" IRect\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 旋转角度")]),t._v("\n  angle"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("img",{attrs:{src:a(363),width:"400px"}}),t._v(" "),n("h2",{attrs:{id:"canvas绘制元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#canvas绘制元素"}},[t._v("#")]),t._v(" canvas绘制元素")]),t._v(" "),n("p",[t._v("因为需绘制元素（图片、文字、视频）占用的位置都可用矩形表示，所以可以：")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 canvas 坐标系原点移动到 rect 中心点")]),t._v("\nctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTransform")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" w "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" h "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这样任意 rect 的绘制参数都是一样的")]),t._v("\nctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("drwaImage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("img"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("w "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("h "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" w"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" h"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 围绕中心点旋转")]),t._v("\nctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rotate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("angle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h2",{attrs:{id:"移动元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#移动元素"}},[t._v("#")]),t._v(" 移动元素")]),t._v(" "),n("p",[t._v("这一步非常简单，跟拖拽dom元素一样。")]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 监听mousemove事件，由鼠标位置减去初始位置，可以得到移动的坐标差值。  ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// startX startY 是鼠标按下时的位置")]),t._v("\nincX "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" offsetX "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" startX\nincY "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" offsetY "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" startY\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 将移动距离映射为 Canvas 坐标系中的距离（因为 Canvas clientWith 跟 width 很可能不一样）。  ")]),t._v("\nincX "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" incX "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("canvas"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clientWith "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" canvas"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// incY 同理")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 将新的坐标设置到元素的位置上。")]),t._v("\nsprite"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setRect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" incX"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" y "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" incY "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h2",{attrs:{id:"翻转元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#翻转元素"}},[t._v("#")]),t._v(" 翻转元素")]),t._v(" "),n("p",[n("em",[t._v("一般通过右键菜单来触发翻转效果，接收到事件后选择以下某个方法")])]),t._v(" "),n("p",[n("strong",[t._v("两个方法")])]),t._v(" "),n("ol",[n("li",[t._v("可通过 "),n("code",[t._v("ctx.setTransform")]),t._v(" 实现。（"),n("strong",[t._v("建议")]),t._v("，据说性能好些，不需要 ctx.save ctx.restore）")])]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/setTransform")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 水平翻转")]),t._v("\nctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTransform")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 垂直翻转")]),t._v("\nctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTransform")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("ol",{attrs:{start:"2"}},[n("li",[t._v("可通过 ctx.scale 实现。")])]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/scale")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 水平翻转")]),t._v("\nctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("scale")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 垂直翻转")]),t._v("\nctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("scale")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h2",{attrs:{id:"旋转元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#旋转元素"}},[t._v("#")]),t._v(" 旋转元素")]),t._v(" "),n("ol",[n("li",[t._v("获取旋转的中心点，通过 rect 计算得到。"),n("code",[t._v("{ x: x + w / 2, y: y + h / 2 }")])]),t._v(" "),n("li",[t._v("监听mousemove事件，获取鼠标坐标，由鼠标坐标得到旋转角度"),n("code",[t._v("angle = Math.atan2(y, x)")]),t._v("。")])]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rotateSprite")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("centerPos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" onChange")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" onMove "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" clientX"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" clientY "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" MouseEvent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token parameter"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 映射为 相对中心点的坐标")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" clientX "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" centerPos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" y "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" clientY "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" centerPos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 旋转控制点在正上方，相对 x 轴是 -90°， 所以需要加上 Math.PI / 2")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" angle "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("atan2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PI")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("onChange")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("angle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" clear "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token parameter"}},[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mousemove'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" onMove"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mouseup'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" clear"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mousemove'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" onMove"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mouseup'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" clear"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"缩放元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#缩放元素"}},[t._v("#")]),t._v(" 缩放元素")]),t._v(" "),n("p",[n("em",[t._v("本身rect缩放非常简单，加上旋转后，缩放效果就复杂了很多。")]),n("br"),t._v(" "),n("strong",[t._v("比如：")])]),t._v(" "),n("ol",[n("li",[t._v("拖拽rect右侧的控制点，只能改变矩形的宽度，在旋转情况下，rect左侧的边是保持不动的。")]),t._v(" "),n("li",[t._v("拖拽 rect 右下角的控制点，同时改变宽高，但需要位置等比，rect 左上角的点保持不动。")])]),t._v(" "),n("h3",{attrs:{id:"所以这个题可以抽象为"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#所以这个题可以抽象为"}},[t._v("#")]),t._v(" 所以这个题可以抽象为")]),t._v(" "),n("ol",[n("li",[t._v("给出的参数：rect（坐标、宽高）数据，旋转角度、鼠标坐标。")]),t._v(" "),n("li",[t._v("需要解出的答案：新的IRect（坐标、宽高）。")])]),t._v(" "),n("h3",{attrs:{id:"解题步骤"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解题步骤"}},[t._v("#")]),t._v(" 解题步骤")]),t._v(" "),n("p",[t._v("以拖拽右下角控制点（RB）为例，因为是等比缩放，所以中心点会一直处于对角线（LT-RB）上。"),n("br"),t._v(" "),n("img",{attrs:{src:a(364),width:"600px"}})]),t._v(" "),n("ol",[n("li",[t._v("监听 mousemove 事件，获取鼠标坐标，减去中心点坐标，得到相对于中心点的坐标。")]),t._v(" "),n("li",[t._v("根据坐标O、元素旋转角度、IRect，可计算出 RB 被 移动的长度。")]),t._v(" "),n("li",[t._v("移动长度乘以对应的三角函数，即为增加的宽、高。")])]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对角线角度（LB-RT对角线，角度是负数，需要乘以-1）")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" diagonalAngle "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("atan2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("h"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("w"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 坐标系旋转角度， lb->rt的对角线的初始角度为负数，所以需要乘以-1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" rotateAngle "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" diagonalAngle "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" angle\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// startPos 及 RB 的坐标（拖拽起始位置），ClientXY 是mousemove事件中获取的坐标")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ox "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" clientX "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" startPos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oy "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" clientY "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" startPos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 坐标系旋转变化公式，让x轴与【对角线重合】，鼠标位置的x值即为增加的长度（RB’位于鼠标与对角线的垂直交点）")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" incS "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ox "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cos")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rotateAngle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" oy "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rotateAngle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等比例缩放，增加宽高等于长度乘以对应的角度函数")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为等比例缩放，中心及被拖拽的点，一定在对角线上")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" incW "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" incS "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cos")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("diagonalAngle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" incH "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" incS "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("diagonalAngle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 新中心点坐标, 原中心坐标 (x + w / 2, y + h / 2)")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newCntX "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" incS "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cos")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rotateAngle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" w "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newCntY "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" incS "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rotateAngle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" h "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// rect 新坐标")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newX "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newCntX "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" newW "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newY "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newCntY "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" newH "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 新的rect: { x: newX, y: newY, w: newW, h: newH }")]),t._v("\n")])])]),n("p",[t._v("上面代码用到了"),n("strong",[t._v("坐标系旋转变化公式")]),t._v("，其推导如下图所示：\n"),n("img",{attrs:{src:a(365),width:"600px"}})]),t._v(" "),n("h3",{attrs:{id:"其他缩放场景注意事项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其他缩放场景注意事项"}},[t._v("#")]),t._v(" 其他缩放场景注意事项")]),t._v(" "),n("ol",[n("li",[t._v("左边三个点的缩放，坐标值变小（负数），也是在放大，所以计算出来值要乘以-1。")]),t._v(" "),n("li",[t._v("利用好坐标系旋转变化公式，拖拽某些点时，注意其角度与默认 X 轴之间的差值。")])]),t._v(" "),n("h2",{attrs:{id:"判断鼠标是否点击了元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#判断鼠标是否点击了元素"}},[t._v("#")]),t._v(" 判断鼠标是否点击了元素")]),t._v(" "),n("ol",[n("li",[t._v("将鼠标坐标，rect xy 值转换为相对于中心点的坐标")]),t._v(" "),n("li",[t._v("再求出鼠标坐标旋转 rect 角度后的坐标（坐标系旋转公式）")]),t._v(" "),n("li",[t._v("判断鼠标点击的坐标是否超出 rect 边界")])]),t._v(" "),n("div",{staticClass:"language-ts extra-class"},[n("pre",{pre:!0,attrs:{class:"language-ts"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// pos 鼠标坐标， rect center 中心点")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 鼠标点击坐标映射成 canvas坐标, 然后转换为以中点为原点的坐标")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cvsOX "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" ratio"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("w "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" center"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cvsOY "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" ratio"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("h "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" center"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果有旋转，映射成相对原点，旋转前的坐标")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" mx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cvsOX\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" my "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cvsOY\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" w"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" h "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" rect\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 映射成中心点坐标")]),t._v("\nx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" center"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x\ny "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" y "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" center"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 坐标系旋转变化公式 ")]),t._v("\nmx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cvsOX "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cos")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("angle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" cvsOY "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("angle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmy "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cvsOY "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cos")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("angle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" cvsOX "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("angle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" mx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" w "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" my "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" y "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" my "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" y "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" h"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);